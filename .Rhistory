library(lattice)
# read data
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
# draw histogram and calculate mean and median
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
mean.orig <- mean(tapply(activity$steps, activity$date,sum,na.rm=T))
mean.orig
median.orig <- median(tapply(activity$steps, activity$date,sum,na.rm=T))
median.orig
# assign an ID number to the 5 min period of any given day
num.days <- length(unique(activity$date))
num.pers <- sum(activity$date==activity$date[1])
activity <- cbind(activity, rep(1:num.pers,num.days))
colnames(activity)[length(colnames(activity))] <- 'period'
# make a new table estimating the average steps per 5 min period
# plot a line of average steps per day
xyplot(tapply(activity$steps,activity$period,mean,na.rm=T) ~ 1:num.pers,
type='l', xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
# find in which period on average the person makes the most steps
max.steps = which(tapply(activity$steps,activity$period,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$period,mean,na.rm=T)))
max.steps
# count the number of rows containing NAs
NA.count = sum(!complete.cases(activity))
NA.count
# make a copy of the original activity table and impute NAs to the period average
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <- as.vector(tapply(activity.imp$steps,activity.imp$period,mean,na.rm=T)[activity.imp[is.na(activity.imp$steps),]$period])
# draw histogram and recalculate mean and median with the new data table
histogram(tapply(activity.imp$steps,activity.imp$date,sum),
xlab = "Number of steps per day", main = "Histogram of Daily Steps")
mean.imp <- mean(tapply(activity.imp$steps,activity.imp$date,sum))
mean.imp
median.imp <- median(tapply(activity.imp$steps,activity.imp$date,sum))
median.imp
# add weekday/weekend factor variable to the new data table
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$period,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
# plot
with(unique(activity.imp[,4:6]),xyplot(persdaysmeans ~ period | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
# plot
with(unique(activity.imp[,4:6]),xyplot(persdaysmeans ~ period | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
rm(list=ls())
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
class(activity[,1])
class(activity[,2])
class(activity[,3])
View(activity)
activity$date[1]
activity$date <- as.Date(activity$date,'%Y-%m-%d')
activity$interval <- as.factor(activity$interval)
if(!("lattice" %in% installed.packages())) {
install.packages("lattice")
}
library(lattice)
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
mean.orig <- mean(tapply(activity$steps, activity$date,sum,na.rm=T))
mean.orig
median.orig <- median(tapply(activity$steps, activity$date,sum,na.rm=T))
median.orig
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~ unique(activity$interval),
type='l', xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
max(activity$interval)
activity$interval
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
seq(0,2355,step=5),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
max.steps = which(tapply(activity$steps,activity$period,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$period,mean,na.rm=T)))
max.steps = which(tapply(activity$steps,activity$interval,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$interval,mean,na.rm=T)))
max.steps
NA.count = sum(!complete.cases(activity))
NA.count
rm(list=ls())
# Check if lattice is available for usage and load it
if(!("lattice" %in% installed.packages())) {
install.packages("lattice")
}
library(lattice)
# read data
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
activity$date <- as.Date(activity$date,'%Y-%m-%d')
activity$interval <- as.factor(activity$interval)
# draw histogram and calculate mean and median
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
mean.orig <- mean(tapply(activity$steps, activity$date,sum,na.rm=T))
mean.orig
median.orig <- median(tapply(activity$steps, activity$date,sum,na.rm=T))
median.orig
# assign an ID number to the 5 min period of any given day
#num.days <- length(unique(activity$date))
#num.pers <- sum(activity$date==activity$date[1])
#activity <- cbind(activity, rep(1:num.pers,num.days))
#colnames(activity)[length(colnames(activity))] <- 'period'
# make a new table estimating the average steps per 5 min period
# plot a line of average steps per day
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
# find in which period on average the person makes the most steps
max.steps = which(tapply(activity$steps,activity$interval,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$interval,mean,na.rm=T)))
max.steps
# count the number of rows containing NAs
NA.count = sum(!complete.cases(activity))
NA.count
# make a copy of the original activity table and impute NAs to the period average
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <- as.vector(tapply(activity.imp$steps,activity.imp$period,mean,na.rm=T)[activity.imp[is.na(activity.imp$steps),]$period])
# draw histogram and recalculate mean and median with the new data table
histogram(tapply(activity.imp$steps,activity.imp$date,sum),
xlab = "Number of steps per day", main = "Histogram of Daily Steps")
mean.imp <- mean(tapply(activity.imp$steps,activity.imp$date,sum))
mean.imp
median.imp <- median(tapply(activity.imp$steps,activity.imp$date,sum))
median.imp
# add weekday/weekend factor variable to the new data table
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$period,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
# plot and compare the average steps per 5 minute period
# between weekends and weekdays
with(unique(activity.imp[,4:6]),xyplot(persdaysmeans ~ period | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
rm(list=ls())
if(!("lattice" %in% installed.packages())) {
install.packages("lattice")
}
library(lattice)
# read data
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
activity$date <- as.Date(activity$date,'%Y-%m-%d')
activity$interval <- as.factor(activity$interval)
# draw histogram and calculate mean and median
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
mean.orig <- mean(tapply(activity$steps, activity$date,sum,na.rm=T))
mean.orig
median.orig <- median(tapply(activity$steps, activity$date,sum,na.rm=T))
median.orig
# assign an ID number to the 5 min period of any given day
#num.days <- length(unique(activity$date))
#num.pers <- sum(activity$date==activity$date[1])
#activity <- cbind(activity, rep(1:num.pers,num.days))
#colnames(activity)[length(colnames(activity))] <- 'period'
# make a new table estimating the average steps per 5 min period
# plot a line of average steps per day
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
# find in which period on average the person makes the most steps
max.steps = which(tapply(activity$steps,activity$interval,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$interval,mean,na.rm=T)))
max.steps
# count the number of rows containing NAs
NA.count = sum(!complete.cases(activity))
NA.count
# make a copy of the original activity table and impute NAs to the period average
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$period,mean,
na.rm=T)[activity.imp[is.na(activity.imp$steps),]$period])
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$period,mean,
na.rm=T)[activity.imp[is.na(activity.imp$steps),]$period])
View(activity.imp)
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,
na.rm=T)[activity.imp[is.na(activity.imp$steps),]$interval])
View(activity.imp)
# draw histogram and recalculate mean and median with the new data table
histogram(tapply(activity.imp$steps,activity.imp$date,sum),
xlab = "Number of steps per day", main = "Histogram of Daily Steps")
mean.imp <- mean(tapply(activity.imp$steps,activity.imp$date,sum))
mean.imp
median.imp <- median(tapply(activity.imp$steps,activity.imp$date,sum))
median.imp
# add weekday/weekend factor variable to the new data table
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$period,activity.imp$days),mean)
View(activity.imp)
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
# plot and compare the average steps per 5 minute period
# between weekends and weekdays
with(unique(activity.imp[,4:6]),xyplot(persdaysmeans ~ period | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
with(unique(activity.imp[,4:6]),xyplot(persdaysmeans ~ interval | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
View(activity.imp)
rm(list=ls())
# Check if lattice is available for usage and load it
if(!("lattice" %in% installed.packages())) {
install.packages("lattice")
}
library(lattice)
# read data
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
activity$date <- as.Date(activity$date,'%Y-%m-%d')
activity$interval <- as.factor(activity$interval)
# draw histogram and calculate mean and median
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
mean.orig <- mean(tapply(activity$steps, activity$date,sum,na.rm=T))
mean.orig
median.orig <- median(tapply(activity$steps, activity$date,sum,na.rm=T))
median.orig
# assign an ID number to the 5 min period of any given day
#num.days <- length(unique(activity$date))
#num.pers <- sum(activity$date==activity$date[1])
#activity <- cbind(activity, rep(1:num.pers,num.days))
#colnames(activity)[length(colnames(activity))] <- 'period'
# make a new table estimating the average steps per 5 min period
# plot a line of average steps per day
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
# find in which period on average the person makes the most steps
max.steps = which(tapply(activity$steps,activity$interval,mean,na.rm=T) %in%
max(tapply(activity$steps,activity$interval,mean,na.rm=T)))
max.steps
# count the number of rows containing NAs
NA.count = sum(!complete.cases(activity))
NA.count
# make a copy of the original activity table and impute NAs to the period average
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,
na.rm=T)[activity.imp[is.na(activity.imp$steps),]$interval])
# draw histogram and recalculate mean and median with the new data table
histogram(tapply(activity.imp$steps,activity.imp$date,sum),
xlab = "Number of steps per day", main = "Histogram of Daily Steps")
mean.imp <- mean(tapply(activity.imp$steps,activity.imp$date,sum))
mean.imp
median.imp <- median(tapply(activity.imp$steps,activity.imp$date,sum))
median.imp
# add weekday/weekend factor variable to the new data table
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend',6] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
View(activity.imp)
rm(list=ls())
activity <- read.csv(unz("activity.zip","activity.csv"),header=T)
activity$date <- as.Date(activity$date,'%Y-%m-%d')
activity$interval <- as.factor(activity$interval)
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,na.rm=T)
[activity.imp[is.na(activity.imp$steps),]$interval])
mean.imp <- mean(tapply(activity.imp$steps,activity.imp$date,sum))
mean.imp
median.imp <- median(tapply(activity.imp$steps,activity.imp$date,sum))
median.imp
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
View(activity.imp)
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',['persdaysmeans']] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday','persdaysmeans'] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend','persdaysmeans'] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,na.rm=T)
[activity.imp[is.na(activity.imp$steps),]$interval])
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday','persdaysmeans'] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend','persdaysmeans'] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
View(activity.imp)
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,na.rm=T)
[activity.imp[is.na(activity.imp$steps),]$interval])
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp[activity.imp$days == 'weekday',5] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',4],1])
activity.imp[activity.imp$days == 'weekend',5] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',4],2])
View(activity.imp)
View(activity.imp)
with(unique(activity.imp[,3:5]),xyplot(persdaysmeans ~ interval | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
head(persdaysmeans)
class(activity.imp$persdaysmeans)
activity.imp[activity.imp$days == 'weekday',5]
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,na.rm=T)
[activity.imp[is.na(activity.imp$steps),]$interval])
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
activity.imp <- activity
activity.imp[is.na(activity.imp$steps),]$steps <-
as.vector(tapply(activity.imp$steps,activity.imp$interval,mean,na.rm=T)
[activity.imp[is.na(activity.imp$steps),]$interval])
days <- weekdays(as.Date(activity.imp$date,"%Y-%m-%d"))
days[days=='Sunday' | days == 'Saturday'] <- 'weekend'
days[days!='weekend'] <- 'weekday'
activity.imp <- cbind(activity.imp,days)
# create a table to be used for the plot
persdaysmeans <- tapply(activity.imp$steps,
list(activity.imp$interval,activity.imp$days),mean)
activity.imp <- cbind(activity.imp,persdaysmeans =
vector('numeric',length = dim(activity.imp)[1]))
View(activity.imp)
View(activity.imp)
View(activity.imp)
activity.imp[activity.imp$days == 'weekday',5] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekday',3],1])
activity.imp[activity.imp$days == 'weekend',5] <-
as.vector(persdaysmeans[activity.imp[activity.imp$days == 'weekend',3],2])
View(activity.imp)
with(unique(activity.imp[,3:5]),xyplot(persdaysmeans ~ interval | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
with(unique(activity.imp[,3:5]),xyplot(persdaysmeans ~ as.numeric(interval) | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
with(unique(activity.imp[,3:5]),xyplot(persdaysmeans ~ as.character(interval) | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
with(unique(activity.imp[,3:5]),xyplot(persdaysmeans ~ as.numeric(interval) | days,type='l',
layout = c(1,2),xlab = 'Interval',
ylab = 'Number of Steps'))
message(paste("Average steps per day: ",mean(tapply(activity$steps, activity$date,sum,na.rm=T))))
message(paste("Average steps per day:",mean(tapply(activity$steps, activity$date,sum,na.rm=T))))
print(paste("Average steps per day:",
mean(tapply(activity$steps, activity$date,sum,na.rm=T))))
print(paste("Average steps per day:",
round(mean(tapply(activity$steps, activity$date,sum,na.rm=T)))))
?round
print(paste("Average steps per day:",
round(mean(tapply(activity$steps, activity$date,sum,na.rm=T))),
digits = 2))
print(paste("Average steps per day:",
round(mean(tapply(activity$steps, activity$date,sum,na.rm=T)),
digits = 2)))
message(paste("Average steps per day:",
round(mean(tapply(activity$steps, activity$date,sum,na.rm=T)),
digits = 2)))
message(paste("Median of steps per day:",
round(median(tapply(activity$steps, activity$date,sum,na.rm=T)),
digits = 2)))
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per 5 minute period of the day")
xyplot(tapply(activity$steps,activity$interval,mean,na.rm=T) ~
as.numeric(unique(activity$interval)),type='l',
xlab = 'Number of period of the day',
ylab = 'Average number of steps',
main = "Average number of steps per n-th 5 minute period of the day")
max.steps <-max(tapply(activity$steps,activity$interval,mean,na.rm=T))
max.interval <- which(tapply(activity$steps,activity$interval,mean,na.rm=T) %in%
max.steps)
round(max.steps,2)
message(paste("The maximum average number of steps was",round(max.steps,2),
"and it occured in interval #",max.interval))
message(paste("The maximum average number of steps was",round(max.steps,2),
"and it occured in interval",max.interval,"."))
message(paste0("The maximum average number of steps was",round(max.steps,2),
"and it occured in interval",max.interval,))
message(paste0("The maximum average number of steps was",round(max.steps,2),
"and it occured in interval",max.interval))
message(paste0("The maximum average number of steps was ",round(max.steps,2),
" and it occured in interval ",max.interval,"."))
104*5/60
70*5/60
104*5/60%/%1
104*5/60%/%8
104*5/60 %/%8
(104*5/60) %/%8
6%5
6//5
104*5%/%60
(104*5)%/%60
(104*5)/60 %% 1
((104*5)/60) %% 1
((104*5)/60) %% 1 * 60
`r (max.interval*5)%/%60`:`r (max.interval*5/60) %% 1 *60`
288*5/60
histogram(tapply(activity$steps, activity$date,sum,na.rm=T),
xlab = "Steps per day", main = "Histogram of Steps made per day")
summary(activity)
skew(activity$steps)
summary(activity$steps)
?skewness
??skewness
k3.linear(activity$steps)
library(psch)
library(psych)
install.packages(psych)
install.packages('psych')
library(psych)
describe(activity$steps)
describe(activity.imp$steps)
histogram(tapply(activity.imp$steps,activity.imp$date,sum),
xlab = "Number of steps per day", main = "Histogram of Daily Steps")
message(paste("Average steps per day:",
round(mean(tapply(activity.imp$steps, activity.imp$date,sum)),
digits = 2)))
message(paste("Median of steps per day:",
round(median(tapply(activity$steps, activity$date,sum)),
digits = 2)))
message(paste("Median of steps per day:",
round(median(tapply(activity.imp$steps, activity.imp$date,sum)),
digits = 2)))
with(unique(activity.imp[,3:5]),
xyplot(persdaysmeans ~ as.numeric(interval) | days,type='l',
layout = c(1,2),xlab = 'Interval', ylab = 'Number of Steps'))
